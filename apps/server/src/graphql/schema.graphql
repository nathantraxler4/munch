type Recipe {
    name: String!
    ingredients: String!
    directions: String!
}

type Menu {
    courses: [Course!]!
    backgroundImage: String!
}

type Course {
    name: String!
    description: String!
    url: String!
}

type StreamError {
    message: String!
    code: String!
}

type PartialMenu {
    courses: [Course!]
    backgroundImage: String
}

union MenuStream = PartialMenu | StreamError

input RecipeInput {
    name: String!
    ingredients: String!
    directions: String!
    url: String!
}

type Query {
    recipes: [Recipe!]!
    menus: [Menu!]!
    generateMenu(recipes: [RecipeInput!]!): Menu!
}

type Mutation {
    addRecipes(recipes: [RecipeInput!]!): [Recipe!]!
    promptAgent(prompt: String!): String!
}

type Subscription {
    generateMenuFromPrompt(prompt: String!): MenuStream
}
